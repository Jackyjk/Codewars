//! My solution Timeout
// //* Create number Array from 1 to num.
// function prime (num) {
//     let primeArr = [];
//     for (let i = 1; i < num; i++) {
//         for (var j = 2; j < i; j++) {
//             if (i % j === 0) {
//                 break;
//             }
//         }
//         if (i <= j && i != 1) {
//             primeArr.push(i);
//         }
//     }
//     return primeArr
// }

// //* Create number Array from num1 to num2.
// function arrCreate (num1, num2) {
//     if (num1 >= num2) return []
//     let arr = []
//     for (let i = num1; i <= num2; i++) {
//         arr.push(i)
//     }
//     return arr
// }

// function sumOfPrimeDistance (arr) {
//     //coding and coding..
//     let newArr = prime(arr[arr.length - 1])
//     let count = 0
//     //* for loop find the number data
//     for (let i = 0; i < arr.length; i++) {
//         for (let j = 0; j < arr.length; j++) {
//             //* create number Array
//             // let arr2 = arr[i] < arr[j] ? arrCreate(arr[i], arr[j]) : []
//             //* next more faster
//             let arr2 = arrCreate(arr[i], arr[j])
//             for (let k = 0; k < arr2.length; k++) {
//                 //* find -> true
//                 if (newArr.includes(arr2[k])) count++
//             }
//         }
//     }
//     return count
// }


// const sumOfPrimeDistance = arr => {
//     return arr
//         .slice(1)
//         .map((a, i) => getPrimeCount(arr[i], a))
//         .map((p, i) => p * (arr.length - i - 1) * (i + 1))
//         .reduce((s, p) => s + p);
// }

// const getPrimeCount = (low, high) => {
//     return [...Array(high - low).keys()]
//         .map(i => i + low)
//         .filter(isPrime)
//         .length;
// }

// const isPrime = i => {
//     for (let j = 3; j <= Math.floor(Math.sqrt(i)); j += 2) {
//         if (i % j === 0) return false;
//     }
//     return i % 2 !== 0;
// }

//! Auther's solution
// function sumOfPrimeDistance (arr) {
//     var p1 = arr.length - 1, p2 = 0, s1 = 0, s2 = 0, len = arr.length, r = 0
//     for (var i = 0; i < len - 1; i++) {
//         var c = 0
//         for (var j = arr[i] + 1; j < arr[i + 1]; j += 2) if (isp(j)) c++
//         s1 += p1--
//         s2 += p2++
//         r += (s1 - s2) * c
//     }
//     return r

//     function isp (n) {
//         for (var i = 3; i * i <= n; i += 2) if (n % i == 0) return false
//         return true
//     }
// }


function isPrime (n) {
    if (n < 2) return false;
    for (let i = 2; i <= Math.sqrt(n); i++) if (n % i === 0) return false;
    return true;
}
function countPrimes (a, b) {
    var c = 0;
    for (let i = a + 1; i < b; i++) if (isPrime(i)) c++;
    return c;
}
const comb = arr => arr.reduce((s, n) => s + n, 0) * arr.length + (arr.length < 2 ? 0 : comb(arr.slice(1, -1)));

function sumOfPrimeDistance (arr) {
    var diffs = arr.slice(1).map((n, i) => countPrimes(arr[i], n));
    return comb(diffs);
}


// let arr = [4, 6, 12, 14, 16, 20]
let arr = [6, 26, 40, 42, 56, 62, 88, 102, 104, 144, 182, 192, 210, 220, 234, 260, 288, 306, 336, 360, 362, 400, 408, 424, 444, 482, 512, 552, 580, 592, 612, 652, 682, 704, 734, 772, 804, 832, 852, 860, 880, 896, 902, 942, 944, 954, 968, 1008, 1046, 1054, 1072, 1076, 1078, 1090, 1122, 1132, 1168, 1170, 1190, 1204, 1220, 1230, 1266, 1286, 1314, 1330, 1340, 1350, 1366, 1386, 1416, 1436, 1466, 1470, 1500, 1510, 1516, 1522, 1554, 1568, 1588, 1608, 1612, 1648, 1674, 1692, 1714, 1742, 1746, 1762, 1800, 1824, 1834, 1854, 1878, 1918, 1924, 1948, 1966, 1982, 1990, 2030, 2048, 2068, 2094, 2126, 2162, 2184, 2220, 2224, 2232, 2246, 2258, 2288, 2304, 2322, 2324, 2344, 2370, 2388, 2426, 2464, 2466, 2486, 2492, 2508, 2526, 2558, 2598, 2626, 2650, 2670, 2672, 2704, 2734, 2748, 2780, 2810, 2816, 2850, 2872, 2882, 2884, 2888, 2894, 2912, 2952, 2960, 3000, 3040, 3048, 3054, 3058, 3088, 3118, 3122, 3162, 3202, 3234, 3248, 3258, 3282, 3316, 3334, 3370, 3408, 3432, 3472, 3476, 3480, 3510, 3534, 3538, 3544, 3572, 3612, 3646, 3664, 3672, 3674, 3698, 3712, 3724, 3734, 3746, 3782, 3796, 3836, 3844, 3864, 3896, 3920, 3924, 3926, 3958, 3974, 4000, 4002, 4042, 4076, 4094, 4118, 4128, 4166, 4190, 4204, 4244, 4252, 4254, 4268, 4290, 4310, 4350, 4382, 4420, 4442, 4470, 4506, 4516, 4522, 4560, 4566, 4580, 4594, 4628, 4642, 4654, 4682, 4698, 4738, 4744, 4758, 4786, 4822, 4850, 4886, 4912, 4918, 4944, 4974, 4978, 5016, 5032, 5046, 5074, 5094, 5130, 5144, 5170, 5190, 5208, 5240, 5242, 5250, 5288, 5308, 5320, 5360, 5388, 5404, 5422, 5432, 5446, 5484, 5510, 5528, 5546, 5580, 5606, 5618, 5648, 5682, 5716, 5724, 5764, 5766, 5772, 5792, 5832, 5858, 5860, 5896, 5900, 5926, 5942, 5966, 6004, 6006, 6030, 6050, 6056, 6072, 6098, 6120, 6156, 6184, 6216, 6250, 6258, 6280, 6284, 6320, 6328, 6330, 6342, 6368, 6384, 6408, 6444, 6452, 6470, 6498, 6538, 6568, 6584, 6598, 6620, 6650, 6654, 6694, 6702, 6736, 6742, 6780, 6784, 6790, 6822, 6842, 6854, 6870, 6874, 6904, 6932, 6948, 6960, 6966, 6968, 7004, 7040, 7044, 7054, 7084, 7104, 7132, 7156, 7194, 7214, 7228, 7242, 7274, 7314, 7352, 7364, 7378, 7388, 7410, 7438, 7462, 7482, 7512, 7548, 7588, 7598, 7616, 7632, 7666, 7694, 7730, 7766, 7774, 7794, 7808, 7836, 7860, 7896, 7906, 7940, 7968, 7980, 7994, 8014, 8054, 8074, 8088, 8124, 8136, 8160, 8186, 8216, 8236, 8248, 8258, 8272, 8276, 8310, 8330, 8358, 8364, 8366, 8400, 8406, 8418, 8422, 8444, 8456, 8462, 8478, 8488, 8518, 8544, 8562, 8566, 8568, 8572, 8596, 8610, 8620, 8644, 8680, 8718, 8752, 8758, 8780, 8814, 8824, 8830, 8846, 8862, 8898, 8900, 8914, 8930, 8950, 8972, 8990, 8998, 9034, 9074, 9104, 9130, 9162, 9196, 9230, 9268, 9270, 9300, 9310, 9316, 9338, 9340, 9378, 9418, 9456, 9478, 9488, 9516, 9550, 9576, 9602, 9628, 9650, 9666, 9702, 9726, 9738, 9770, 9806, 9842, 9872, 9890, 9926, 9962, 9998, 10038, 10040, 10056, 10078, 10100, 10132, 10170, 10196, 10226, 10266, 10294, 10332, 10346, 10382, 10410, 10424, 10442, 10448, 10488, 10504, 10540, 10580, 10620, 10640, 10670, 10684, 10702, 10708, 10736, 10742, 10774, 10790, 10830, 10854, 10870, 10906, 10916, 10926, 10936, 10938, 10976, 10988, 11018, 11038, 11054, 11092, 11096, 11124, 11132, 11146, 11158, 11176, 11212, 11226, 11260, 11264, 11304, 11306, 11320, 11330, 11364, 11402, 11406, 11410, 11440, 11466, 11500, 11520, 11536, 11570, 11610, 11632, 11668, 11686, 11712, 11728, 11766, 11768, 11806, 11816, 11852, 11866, 11870, 11910, 11934, 11936, 11938, 11956, 11976, 12006, 12016, 12044, 12072, 12092, 12120, 12160, 12188, 12226, 12244, 12252, 12260, 12284, 12324, 12354, 12368, 12376, 12412, 12444, 12454, 12490, 12508, 12540, 12562, 12584, 12610, 12622, 12656, 12694, 12704, 12718, 12742, 12770, 12804, 12818, 12842, 12872, 12878, 12890, 12914, 12950, 12980, 13002, 13010, 13034, 13070, 13076, 13082, 13120, 13134, 13150, 13158, 13194, 13228, 13232, 13256, 13294, 13328, 13336, 13356, 13390, 13398, 13408, 13414, 13444, 13466, 13478, 13492, 13520, 13554, 13590, 13602, 13638, 13676, 13692, 13700, 13706, 13746, 13752, 13778, 13786, 13788, 13824, 13826, 13866, 13870, 13896, 13930, 13936, 13938, 13952, 13986, 14008, 14032, 14066, 14082, 14090, 14104, 14138, 14178, 14214, 14244, 14262, 14278, 14292, 14330, 14336, 14338, 14344, 14376, 14416, 14442, 14458, 14474, 14510, 14546, 14584, 14590, 14608, 14648, 14682, 14694, 14724, 14734, 14758, 14766, 14800, 14840, 14880, 14900, 14920, 14928, 14954, 14988, 15006, 15040, 15070, 15078, 15094, 15128, 15160, 15196, 15214, 15248, 15288, 15316, 15322, 15344, 15346, 15370, 15404, 15428, 15450, 15472, 15492, 15516, 15546, 15584, 15590, 15624, 15636, 15658, 15692, 15726, 15740, 15770, 15796, 15806, 15826, 15862, 15886, 15910, 15914, 15932, 15968, 16002, 16034, 16066, 16080, 16120, 16158, 16166, 16174, 16188, 16196, 16220, 16226, 16236, 16264, 16276, 16278, 16284, 16296, 16322, 16340, 16368, 16374, 16384, 16420, 16422, 16462, 16476, 16512, 16518, 16540, 16580, 16614, 16622, 16660, 16664, 16700, 16734, 16756, 16788, 16810, 16850, 16870, 16892, 16910, 16922, 16924, 16942, 16952, 16954, 16956, 16980, 17012, 17034, 17056, 17094, 17106, 17144, 17146, 17176, 17198, 17230, 17264, 17272, 17294, 17296, 17324, 17326, 17334, 17352, 17392, 17396, 17432, 17460, 17480, 17508, 17516, 17524, 17564, 17590, 17610, 17630, 17632, 17640, 17670, 17684, 17696, 17720, 17740, 17756, 17766, 17772, 17788, 17820, 17826, 17854, 17878, 17892, 17918, 17948, 17958, 17990, 18010, 18044, 18062, 18076, 18112, 18116, 18132, 18170, 18190, 18194, 18218, 18228, 18242, 18254, 18292, 18318, 18324, 18328, 18332, 18354, 18382, 18388, 18398, 18416, 18434, 18454, 18468, 18500, 18520, 18552, 18586, 18598, 18618, 18652, 18676, 18694, 18718, 18740, 18770, 18776, 18802, 18816, 18838, 18842, 18864, 18876, 18912, 18936, 18940, 18976, 18984, 18992, 19004, 19028, 19040, 19046, 19074, 19098, 19102, 19108, 19130, 19164, 19176, 19196, 19198, 19220, 19228, 19238, 19276, 19296, 19318, 19356, 19360, 19380, 19414, 19434, 19458, 19484, 19490, 19526, 19528, 19540, 19550, 19554, 19578, 19612, 19642, 19678, 19710, 19730, 19764, 19800, 19810, 19826, 19864, 19896, 19924, 19956, 19962, 20000, 20014, 20032, 20058, 20066, 20092, 20100, 20128, 20138, 20176, 20180, 20214, 20246, 20286, 20308, 20314, 20316, 20320, 20330, 20334, 20374, 20380, 20400, 20410, 20448, 20474, 20508, 20540, 20576, 20608, 20620, 20658, 20680, 20708, 20742, 20744, 20758, 20776, 20804, 20814, 20824, 20854, 20856, 20868, 20870, 20878, 20896, 20914, 20922, 20954, 20986, 21020, 21044, 21072, 21082, 21092, 21108, 21148, 21162, 21174, 21192, 21232, 21244]
console.log(sumOfPrimeDistance(arr));